[project]
name = "rlsrag"
dynamic = ["version"]
description = "RAG training for RHEL Lightspeed"
authors = [
    {name = "Major Hayden", email = "major@redhat.com"},
]
readme = "README.md"
packages = [
  {include = "rlsrag"}
]
requires-python = "==3.12.*"
dependencies = ["langchain-postgres>=0.0.12", "langchain-community>=0.3.7", "unstructured[md]>=0.16.5", "fastapi[standard]>=0.115.5", "langchain-experimental>=0.3.3", "langchain-ibm>=0.3.3", "langchain-unstructured>=0.1.5", "pyarrow>=18.0.0", "nltk>=3.9.1", "types-requests>=2.32.0.20241016", "pandas>=2.1.4"]
license = {text = "Apache Software License 2.0"}
keywords = ['python']

[project.urls]
Homepage = "https://major.github.io/rlsrag/"
Repository = "https://github.com/major/rlsrag"
Documentation = "https://major.github.io/rlsrag/"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.black]
line-length = 80
target-version = ['py37']
preview = true

[tool.mypy]
files = ["rlsrag"]
disallow_untyped_defs = "True"
disallow_any_unimported = "False"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
disable_error_code = "import-untyped"

[tool.ruff]
target-version = "py37"
line-length = 80
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["rlsrag"]



[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]


[tool.pdm.version]
source = "scm"
fallback_version = "0.0.0"

[tool.pdm.dev-dependencies]
test = [
  "pytest>=7.2.0",
  "pytest-cov>=4.0.0"
  ]

[tool.pdm.build]
excludes = ["./**/.git"]
package-dir = "."
includes = ["rlsrag"]

[dependency-groups]
dev = ["mypy>=0.981", "pre-commit>=2.20.0", "tox>=3.25.1", "types-dateparser>=1.2.0.20240420", "pytest-sugar>=1.0.0", "pytest-randomly>=3.16.0"]

[tool.pdm.scripts]
run-embed = {call = "rlsrag.embed:run_embed_pipeline"}
